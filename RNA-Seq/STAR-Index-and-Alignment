#!/bin/bash

# dataRoot -- for data that is part of the github repository
dataRoot="${DNFA_projectRoot}/data"

if [ ! -d ${dataRoot} ]; then
  echo "dataRoot does not exist at ${dataRoot}; did you 'source configuration'?";
  exit 1;
fi

if [ ! -d ${DNFA_generatedDataroot} ]; then
  echo "The generated data directory does not exist at ${DNFA_generatedDataRoot}."
  echo "Please create it before proceeding."
  exit 1;
fi


## Fetch and build STAR source from releases, make reference genome, align all test
## data and process it into .bam format.
echo "ensuring that STAR is installed in ${DNFA_starRoot}, and reference genome exists"
pushd ${projectRoot}
echo "make reference_genome"
make bamfiles
popd





#####################################################
#### Use HTSeq to count the reads from Sam files ####
#####################################################
## install HTSeq on Linux
pip install HTSeq
## Once HTSeq is installed, will use the  Python scripts dexseq_count.py that come
## with the DEXSeq package (needs to be pre-installed)
python_scripts="~/R/x86_64-redhat-linux-gnu-library/3.4/DEXSeq/python_scripts"
if [ ! -d ${python_scripts}/DEXSeq ]; then
  echo "cannot proceed because DEXSeq is not installed under ${python_scripts}";
  exit;
fi
#pythonScriptsDir = system.file("python_scripts", package="DEXSeq")
#list.files(pythonScriptsDir)

## use position sorted sam file to perform DEXSeq_count!! -p yes: pair-end read
python ${python_scripts}/dexseq_count.py \
  Homo_sapiens.GRCh38.86.DEXSeq.chr.gff \
  test1-1.sort.sam test1-1.sort.text
