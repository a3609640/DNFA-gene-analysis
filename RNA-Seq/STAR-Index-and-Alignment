#!/bin/bash

# dataRoot -- for data that is part of the github repository
dataRoot="data"

# genFilesRoot -- for data or downloads generated by execution of scripts
#                 (you will likely have to modify this line to indicate a
#                 local directory of your choosing)
genfilesRoot="/usr/local/DNFA-genfiles"

generatedDataRoot="${genfilesRoot}/data"
starRoot="${genfilesRoot}/STAR"

echo "ensuring that generated data directory exists at: ${generatedDataRoot}"
mkdir -p ${generatedDataRoot}

echo "ensuring that STAR directory exists at: ${starRoot}"
mkdir -p ${starRoot}

################################################################################
#### download the lastes version of STAR aligner ####
################################################################################

## Fetch and build latest STAR source from releases, in a "STAR" directory
echo "ensuring that STAR is installed in ${starRoot}"
pushd ${starRoot}
wget -nc https://github.com/alexdobin/STAR/archive/2.6.0a.tar.gz
tar -xzf 2.6.0a.tar.gz
cd STAR-2.6.0a/source
make STAR
popd

################################################################################
## download the GRCh38 version of the human genome
################################################################################
# download the annotation GTF file of a recent version of GRCh38: release 94

referenceGenomeDir="${generatedDataRoot}/referenceGenome"
mkdir -p ${referenceGenomeDir}
pushd ${referenceGenomeDir}
# fetch genome data, but not if it's already present locally (-nc for "no clobber" of local files)
ensemblBaseUrl="ftp://ftp.ensembl.org/pub/release-94/fasta/homo_sapiens"
wget -nc ${ensemblBaseUrl}/Homo_sapiens.GRCh38.94.gtf.gz
gunzip Homo_sapiens.GRCh38.94.gtf.gz

# download corresponding GRCh38 FASTA files
wget -nc ${ensemblBaseUrl}/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz
gunzip Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz
popd

################################################################################
#### generate the STAR indices from GRCh38 human reference genome files ####
################################################################################
# the splice-junction-data-base-overhang parameter should have a value of read
# length – 1 set it to 75, because our read length is 76
#
# the runThreadN parameter determines how many threads you want to ask for.
# E.g. A late 2013 MacBook Pro with a 2.6 GHz Intel Core i7 processor, has
# 8 “cores” (4 “real” and 4 “virtual”) via Hyper Threading
#
# The key limitation with STAR is computer RAM - STAR requires at least 30 Gb
# (30000 Mb) to align to the human or mouse genomes.

# mkdir -p data/GRCh38/star_indices_overhang75
mkdir -p ${generatedDataRoot}/STARIndex
pushd ${generatedDataRoot}/STARIndex

# Run STAR to generate genome indices specifying correct path to the genome FASTA
# and annotations GTF file: suggested code from current protocol of bioinformatics
STAR_BIN=${starRoot}/STAR-2.6.0a/bin/Linux_x86_64/STAR
if [ ! -f SA ]; then
  ${STAR_BIN} \
  --runThreadN 12 \
  --runMode genomeGenerate \
  --genomeDir ./ \
  --genomeFastaFiles ${referenceGenomeDir}/Homo_sapiens.GRCh38.dna.primary_assembly.fa \
  --sjdbGTFfile ${referenceGenomeDir}/Homo_sapiens.GRCh38.94.gtf \
  --sjdbOverhang 75
fi

popd

#########################
### Expecting output! ###
#########################
# Oct 26 19:56:38 ..... started STAR run
# Oct 26 19:56:38 ... starting to generate Genome files
# Oct 26 19:57:17 ... starting to sort Suffix Array. This may take a long time...
# Oct 26 19:57:27 ... sorting Suffix Array chunks and saving them to disk...
# Oct 26 20:26:46 ... loading chunks from disk, packing SA...
# Oct 26 20:27:32 ... finished generating suffix array
# Oct 26 20:27:32 ... generating Suffix Array index
# Oct 26 20:30:13 ... completed Suffix Array index
# Oct 26 20:30:13 ..... processing annotations GTF
# Oct 26 20:30:21 ..... inserting junctions into the genome indices
# Oct 26 20:32:23 ... writing Genome to disk ...
# Oct 26 20:32:24 ... writing Suffix Array to disk ...
# Oct 26 20:32:34 ... writing SAindex to disk
# Oct 26 20:32:36 ..... finished successfully

##########################################
### List of generated STAR index files ###
##########################################

# ls -lstr
#        4 -rw-r--r-- 1 suwu suwu        2129 Oct 26 19:57 chrStart.txt
#        4 -rw-r--r-- 1 suwu suwu        1923 Oct 26 19:57 chrName.txt
#        4 -rw-r--r-- 1 suwu suwu        3123 Oct 26 19:57 chrNameLength.txt
#        4 -rw-r--r-- 1 suwu suwu        1200 Oct 26 19:57 chrLength.txt
#    43680 -rw-r--r-- 1 suwu suwu    44727181 Oct 26 20:30 exonGeTrInfo.tab
#      920 -rw-r--r-- 1 suwu suwu      939766 Oct 26 20:30 geneInfo.tab
#    11924 -rw-r--r-- 1 suwu suwu    12209170 Oct 26 20:30 transcriptInfo.tab
#    17796 -rw-r--r-- 1 suwu suwu    18219085 Oct 26 20:30 exonInfo.tab
#     8068 -rw-r--r-- 1 suwu suwu     8260622 Oct 26 20:30 sjdbList.fromGTF.out.tab
#     8068 -rw-r--r-- 1 suwu suwu     8259278 Oct 26 20:30 sjdbList.out.tab
#    10296 -rw-r--r-- 1 suwu suwu    10542274 Oct 26 20:30 sjdbInfo.txt
#        4 -rw-r--r-- 1 suwu suwu        1027 Oct 26 20:32 genomeParameters.txt
#  3118100 -rw-r--r-- 1 suwu suwu  3192928413 Oct 26 20:32 Genome
# 24170156 -rw-r--r-- 1 suwu suwu 24750233619 Oct 26 20:32 SA
#  1529180 -rw-r--r-- 1 suwu suwu  1565873619 Oct 26 20:32 SAindex
#       56 -rw-r--r-- 1 suwu suwu       54045 Oct 26 20:32 Log.out

################################################################################
## STAR alignment: 2-pass mapping protocol
################################################################################

raw_data_basedir="/mnt/data/suwu/Illumina/Testrun/RNA-Seq/Nextseq_Test-32743727"

################################################################################
## looping for sample test1 ##
################################################################################
Star=${STAR_BIN}  # the version of STAR must be the same as the one used for ref. genome
mkdir -p ${generatedDataRoot}/Analysis
output_dir=${generatedDataRoot}/Analysis/2-pass/test1
read_files_base=${raw_data_basedir}/test1
star_index_root=${generatedDataRoot}/STARIndex

mkdir -p ${output_dir}

# iterate over a list of files that differ by only prefixes ("data tags")
data_tags="test1_S2_L001 test1_S2_L002 test1_S2_L003 test1_S2_L004"

if [ ! -f "${output_dir}/test1_S2_L004SJ.out.tab" ]; then
  # test the varibles in looping first
  for tag in $data_tags; do ls $read_files_base/"$tag"_R1_001.fastq.gz; done

  ## run STAR with sequencing data
  for tag in $data_tags; do
  ${STAR_BIN} \
     --genomeDir $star_index_root \
     --sjdbGTFfile ${referenceGenomeDir}/Homo_sapiens.GRCh38.94.gtf \
     --runThreadN 12 \
     --outFileNamePrefix $output_dir/"$tag" \
     --readFilesIn $read_files_base/"$tag"_R1_001.fastq.gz \
                   $read_files_base/"$tag"_R2_001.fastq.gz \
     --readFilesCommand zcat \
     --twopassMode Basic
  done;
fi

#########################
### Expecting output! ###
#########################
# Oct 27 14:34:51 ..... started STAR run
# Oct 27 14:34:51 ..... loading genome
# Oct 27 14:35:01 ..... processing annotations GTF
# Oct 27 14:35:09 ..... inserting junctions into the genome indices
# Oct 27 14:36:02 ..... started 1st pass mapping
# Oct 27 14:37:01 ..... finished 1st pass mapping
# Oct 27 14:37:02 ..... inserting junctions into the genome indices
# Oct 27 14:38:01 ..... started mapping
# Oct 27 14:39:03 ..... finished successfully
# Oct 27 14:39:04 ..... started STAR run
# Oct 27 14:39:04 ..... loading genome
# Oct 27 14:39:13 ..... processing annotations GTF
# Oct 27 14:39:21 ..... inserting junctions into the genome indices
# Oct 27 14:40:16 ..... started 1st pass mapping
# Oct 27 14:41:22 ..... finished 1st pass mapping
# Oct 27 14:41:22 ..... inserting junctions into the genome indices
# Oct 27 14:42:19 ..... started mapping
# Oct 27 14:43:24 ..... finished successfully
# Oct 27 14:43:24 ..... started STAR run
# Oct 27 14:43:24 ..... loading genome
# Oct 27 14:43:33 ..... processing annotations GTF
# Oct 27 14:43:41 ..... inserting junctions into the genome indices
# Oct 27 14:44:33 ..... started 1st pass mapping
# Oct 27 14:45:32 ..... finished 1st pass mapping
# Oct 27 14:45:32 ..... inserting junctions into the genome indices
# Oct 27 14:46:31 ..... started mapping
# Oct 27 14:47:34 ..... finished successfully
# Oct 27 14:47:34 ..... started STAR run
# Oct 27 14:47:34 ..... loading genome
# Oct 27 14:47:44 ..... processing annotations GTF
# Oct 27 14:47:51 ..... inserting junctions into the genome indices
# Oct 27 14:48:44 ..... started 1st pass mapping
# Oct 27 14:49:40 ..... finished 1st pass mapping
# Oct 27 14:49:41 ..... inserting junctions into the genome indices
# Oct 27 14:50:39 ..... started mapping
# Oct 27 14:51:41 ..... finished successfully
################################################################################

################################################################################
#### Expected files generated from STAR aligner ####
################################################################################
# total 6994480
# -rw-r--r-- 1 suwu suwu       1861 Oct 27 13:53 test1_S2_L004Log.final.out
# -rw-r--r-- 1 suwu suwu      32040 Oct 27 13:53 test1_S2_L004Log.out
# -rw-r--r-- 1 suwu suwu        447 Oct 27 13:53 test1_S2_L004Log.progress.out
# -rw-r--r-- 1 suwu suwu    4542328 Oct 27 13:53 test1_S2_L004SJ.out.tab
# -rw-r--r-- 1 suwu suwu 1737706862 Oct 27 13:53 test1_S2_L004Aligned.out.sam
# drwx------ 2 suwu suwu       4096 Oct 27 13:51 test1_S2_L004_STARpass1
# drwx------ 2 suwu suwu       4096 Oct 27 13:50 test1_S2_L004_STARgenome
# -rw-r--r-- 1 suwu suwu       1861 Oct 27 13:50 test1_S2_L003Log.final.out
# -rw-r--r-- 1 suwu suwu      32040 Oct 27 13:50 test1_S2_L003Log.out
# -rw-r--r-- 1 suwu suwu        447 Oct 27 13:50 test1_S2_L003Log.progress.out
# -rw-r--r-- 1 suwu suwu    4588811 Oct 27 13:50 test1_S2_L003SJ.out.tab
# -rw-r--r-- 1 suwu suwu 1810970767 Oct 27 13:50 test1_S2_L003Aligned.out.sam
# drwx------ 2 suwu suwu       4096 Oct 27 13:48 test1_S2_L003_STARpass1
# drwx------ 2 suwu suwu       4096 Oct 27 13:46 test1_S2_L003_STARgenome
# -rw-r--r-- 1 suwu suwu       1861 Oct 27 13:46 test1_S2_L002Log.final.out
# -rw-r--r-- 1 suwu suwu      32040 Oct 27 13:46 test1_S2_L002Log.out
# -rw-r--r-- 1 suwu suwu        447 Oct 27 13:46 test1_S2_L002Log.progress.out
# -rw-r--r-- 1 suwu suwu    4561100 Oct 27 13:46 test1_S2_L002SJ.out.tab
# -rw-r--r-- 1 suwu suwu 1785960758 Oct 27 13:46 test1_S2_L002Aligned.out.sam
# drwx------ 2 suwu suwu       4096 Oct 27 13:44 test1_S2_L002_STARpass1
# drwx------ 2 suwu suwu       4096 Oct 27 13:43 test1_S2_L002_STARgenome
# -rw-r--r-- 1 suwu suwu       1861 Oct 27 13:42 test1_S2_L001Log.final.out
# -rw-r--r-- 1 suwu suwu      32040 Oct 27 13:42 test1_S2_L001Log.out
# -rw-r--r-- 1 suwu suwu        447 Oct 27 13:42 test1_S2_L001Log.progress.out
# -rw-r--r-- 1 suwu suwu    4582711 Oct 27 13:42 test1_S2_L001SJ.out.tab
# -rw-r--r-- 1 suwu suwu 1809209371 Oct 27 13:42 test1_S2_L001Aligned.out.sam
# drwx------ 2 suwu suwu       4096 Oct 27 13:41 test1_S2_L001_STARpass1
# drwx------ 2 suwu suwu       4096 Oct 27 13:39 test1_S2_L001_STARgenome
################################################################################


################################################################################
## with looping for sample test2 ##
################################################################################
Star=${STAR_BIN}  # the version of STAR must be the same as the one used for ref. genome
output_dir=${generatedDataRoot}/Analysis/2-pass/test2
read_files_base=${raw_data_basedir}/test2
star_index_root=${generatedDataRoot}/STARIndex

# iterate over a list of files that differ by only prefixes ("data tags")
data_tags="test2_S3_L001 test2_S3_L002 test2_S3_L003 test2_S3_L004"

mkdir -p ${output_dir}

if [ ! -f "${output_dir}/test2_S3_L004SJ.out.tab" ]; then
  # test loop: print the files on which to operate
  for tag in $data_tags; do ls $read_files_base/"$tag"_R1_001.fastq.gz; done

  ## run STAR with sequencing data
  for tag in $data_tags; do
  ${STAR_BIN} \
     --genomeDir $star_index_root \
     --sjdbGTFfile ${referenceGenomeDir}/Homo_sapiens.GRCh38.94.gtf \
     --runThreadN 12 \
     --outFileNamePrefix $output_dir/"$tag" \
     --readFilesIn $read_files_base/"$tag"_R1_001.fastq.gz \
                   $read_files_base/"$tag"_R2_001.fastq.gz \
     --readFilesCommand zcat \
     --twopassMode Basic
  done;
fi

################################################################################
#### Expected files generated from STAR aligner ####
################################################################################

# total 10632852
# -rw-r--r-- 1 suwu suwu       1861 Oct 27 14:51 test2_S3_L004Log.final.out
# -rw-r--r-- 1 suwu suwu      31806 Oct 27 14:51 test2_S3_L004Log.out
# -rw-r--r-- 1 suwu suwu        565 Oct 27 14:51 test2_S3_L004Log.progress.out
# -rw-r--r-- 1 suwu suwu    5138782 Oct 27 14:51 test2_S3_L004SJ.out.tab
# -rw-r--r-- 1 suwu suwu 2639808030 Oct 27 14:51 test2_S3_L004Aligned.out.sam
# drwx------ 2 suwu suwu       4096 Oct 27 14:49 test2_S3_L004_STARpass1
# drwx------ 2 suwu suwu       4096 Oct 27 14:47 test2_S3_L004_STARgenome
# -rw-r--r-- 1 suwu suwu       1861 Oct 27 14:47 test2_S3_L003Log.final.out
# -rw-r--r-- 1 suwu suwu      31806 Oct 27 14:47 test2_S3_L003Log.out
# -rw-r--r-- 1 suwu suwu        565 Oct 27 14:47 test2_S3_L003Log.progress.out
# -rw-r--r-- 1 suwu suwu    5194883 Oct 27 14:47 test2_S3_L003SJ.out.tab
# -rw-r--r-- 1 suwu suwu 2756790898 Oct 27 14:47 test2_S3_L003Aligned.out.sam
# drwx------ 2 suwu suwu       4096 Oct 27 14:45 test2_S3_L003_STARpass1
# drwx------ 2 suwu suwu       4096 Oct 27 14:43 test2_S3_L003_STARgenome
# -rw-r--r-- 1 suwu suwu       1861 Oct 27 14:43 test2_S3_L002Log.final.out
# -rw-r--r-- 1 suwu suwu      31806 Oct 27 14:43 test2_S3_L002Log.out
# -rw-r--r-- 1 suwu suwu        565 Oct 27 14:43 test2_S3_L002Log.progress.out
# -rw-r--r-- 1 suwu suwu    5178941 Oct 27 14:43 test2_S3_L002SJ.out.tab
# -rw-r--r-- 1 suwu suwu 2714869938 Oct 27 14:43 test2_S3_L002Aligned.out.sam
# drwx------ 2 suwu suwu       4096 Oct 27 14:41 test2_S3_L002_STARpass1
# drwx------ 2 suwu suwu       4096 Oct 27 14:39 test2_S3_L002_STARgenome
# -rw-r--r-- 1 suwu suwu       1861 Oct 27 14:39 test2_S3_L001Log.final.out
# -rw-r--r-- 1 suwu suwu      31806 Oct 27 14:39 test2_S3_L001Log.out
# -rw-r--r-- 1 suwu suwu        565 Oct 27 14:39 test2_S3_L001Log.progress.out
# -rw-r--r-- 1 suwu suwu    5197001 Oct 27 14:39 test2_S3_L001SJ.out.tab
# -rw-r--r-- 1 suwu suwu 2755632179 Oct 27 14:39 test2_S3_L001Aligned.out.sam
# drwx------ 2 suwu suwu       4096 Oct 27 14:37 test2_S3_L001_STARpass1


################################################################################
####   Perform samtool on the STAR-aligned sequence files  ####
################################################################################
## basic samtool command
## samtools sort [-l level] [-m maxMem] [-o out.bam] [-O format] [-n] [-t tag] [-T tmpprefix] [-@ threads] [in.sam|in.bam|in.cram]
## use test1_S2_L001Aligned.out.sam file for sorting
echo "Perform samtool on the STAR-aligned sequence files"
samfile=${generatedDataRoot}/Analysis/2-pass/test1/*.sam
Samsort=${generatedDataRoot}/Analysis/Samsort
## For the sam files from STAR output folder for samtool sorting,
## use filename=$(basename ${f%%.*}) to extract the base name from
## e.g. "test1_S2_L001Aligned.out.sam" as "test1_S2_L001Aligned"; and 
## use it for sort output file name like "test1_S2_L001Aligned.sorted.bam".
mkdir -p ${Samsort}
for f in $samfile; do
  filename=$(basename ${f%%.*})
  echo $filename
  if [ ! -f $Samsort/$filename.sorted.bam ]; then
    samtools sort $f -o $Samsort/$filename.sorted.bam
  fi
done

#######################
###Expecting output!###
#######################
# [bam_sort_core] merging from 3 files...
# test1_S2_L002Aligned
# [bam_sort_core] merging from 3 files...
# test1_S2_L003Aligned
# [bam_sort_core] merging from 3 files...
# test1_S2_L004Aligned
# [bam_sort_core] merging from 3 files...

#######################################################
#### Expected files generated from samtool sorting ####
#######################################################
# total 1097376
# drwxrwxrwx 4 suwu suwu      4096 Oct 27 15:16 ..
# -rw-r--r-- 1 suwu suwu 283465368 Oct 27 17:31 test1_S2_L001Aligned.sorted.bam
# -rw-r--r-- 1 suwu suwu 280018226 Oct 27 17:32 test1_S2_L002Aligned.sorted.bam
# -rw-r--r-- 1 suwu suwu 285476146 Oct 27 17:33 test1_S2_L003Aligned.sorted.bam
# -rw-r--r-- 1 suwu suwu 274736319 Oct 27 17:34 test1_S2_L004Aligned.sorted.bam
# drwxr-xr-x 2 suwu suwu      4096 Oct 27 17:34 .


#####################################################
#### Use HTSeq to count the reads from Sam files ####
#####################################################
## install HTSeq on Linux
pip install HTSeq
## Once HTSeq is installed, will use the  Python scripts dexseq_count.py that come
## with the DEXSeq package (needs to be pre-installed)
python_scripts="~/R/x86_64-redhat-linux-gnu-library/3.4/DEXSeq/python_scripts"
if [ ! -d ${python_scripts}/DEXSeq ]; then
  echo "cannot proceed because DEXSeq is not installed under ${python_scripts}";
  exit;
fi
#pythonScriptsDir = system.file("python_scripts", package="DEXSeq")
#list.files(pythonScriptsDir)

## use position sorted sam file to perform DEXSeq_count!! -p yes: pair-end read
python ${python_scripts}/dexseq_count.py \
  Homo_sapiens.GRCh38.86.DEXSeq.chr.gff \
  test1-1.sort.sam test1-1.sort.text
